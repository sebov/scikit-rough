[tool.poetry]
name = "scikit-rough"
version = "0.0.1-alpha.1"
description = ""
authors = ["sebov <12091011+sebov@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "skrough", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
attrs = "^22.0.1"
numba = "^0.56.0"
numpy = "^1.22.4"
pandas = "^1.4.2"
scikit-learn = "^1.1.1"
joblib = "^1.1.0"

[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
black = "^22.3.0"
flake8 = "^4.0.1"
flaky = "^3.7.0"
isort = "^5.10.1"
jupytext = "^1.14.1"
line-profiler = "^3.4.0"
more-itertools = "^8.13.0"
mypy = "^0.930"
nbqa = "^1.2.2"
poethepoet = "^0.14.0"
pre-commit = "^2.16.0"
pydocstyle = "^6.1.1"
pylint = "^2.14.1"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-randomly = "^3.12.0"
pytest-xdist = "^2.5.0"
python-semantic-release = "^7.23.0"
radon = "^5.1.0"
snakeviz = "^2.1.1"
tox = "^3.25.0"
yelp-gprof2dot = "^1.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# [tool.semantic_release]
# version_variable = "pyproject.toml:version" # version location
# branch = "main"                             # branch to make releases of
# changelog_file = "CHANGELOG.md"             # changelog file
# build_command = "poetry build"              # build dists
# upload_to_repository = false                # don't auto-upload to PyPI
# remove_dist = false                         # don't remove dists

[tool.poe.tasks.test]
shell = "poetry run pytest ${opts} ${tests}"
[[tool.poe.tasks.test.args]]
name = "opts"
positional = false
multiple = false
default = ""
[[tool.poe.tasks.test.args]]
name = "tests"
positional = true
multiple = true
default = "tests"


[tool.poe.tasks.testcov]
shell = """
        NUMBA_DISABLE_JIT=1 poetry run pytest \
        --cov-report=term --cov-report=xml --cov=src/skrough ${opts} ${tests}
        """
[[tool.poe.tasks.testcov.args]]
name = "opts"
positional = false
multiple = false
default = ""
[[tool.poe.tasks.testcov.args]]
name = "tests"
positional = true
multiple = true
default = "tests"


[tool.bandit]
exclude_dirs = ["tests/"]
